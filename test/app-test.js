'use strict';

//var myApp = angular.module('myApp', ['ngResource', 'analytics']);
var myApp = angular.module('myApp', ['myAppConfig','ngResource', 'analytics','ngMockE2E']);

myApp.run(function($httpBackend) {
      
      /*Add remaining needed API's for ViTech team along with Controller test examples. 
      ViTech team can put additional requests here. 
      All working test examples can be seen on controllertest.html. 
      
      ViTech API's Needed: 
      - Get stories (to update hard coded ones)
      - Create Quest (passing story, path, and difficulty)
      - Start Game for Quest (passing questID)
      - Create/Edit new story
      */

      var stories = [];
      var count = 1;
      var testStory = {name: 'test story', id:count, url:'ae_DKNwK_ms'};
      stories.push(testStory);
      
      $httpBackend.whenGET('/jsonapi/quest').respond([{"name":"Quest 1","image":"http://someimage.com/someimage.jpg"},{"name":"Quest 2","image":"http://someimage.com/someimage.jpg"}]);
      $httpBackend.whenGET('/jsonapi/quest/1').respond({"name":"Quest 1","image":"http://someimage.com/someimage.jpg"});
      $httpBackend.whenGET('/jsonapi/quest/2').respond({"name":"Quest 2","image":"http://someimage.com/someimage.jpg"});

      $httpBackend.whenGET('/jsonapi/get_game_paths').respond({"paths": [{"description": "API Game Path", "id": 10515351, "badges": [{"url": "/static/badges/api/a001_on.png", "description": "API Level 1 Badge", "id": 10933926, "name": "Level 1"}, {"url": "/static/badges/api/a002_on.png", "description": "API Level 2 Badge", "id": 10931963, "name": "Level 2"}, {"url": "/static/badges/api/a003_on.png", "description": "API Level 3 Badge", "id": 10931964, "name": "Level 3"}, {"url": "/static/badges/api/a004_on.png", "description": "API Level 4 Badge", "id": 11358367, "name": "Level 4"}, {"url": "/static/badges/api/a005_on.png", "description": "API Level 5 Badge", "id": 11360308, "name": "Level 5"}, {"url": "/static/badges/api/a006_on.png", "description": "API Level 6 Badge", "id": 11363219, "name": "Level 6"}, {"url": "/static/badges/api/a007_on.png", "description": "API Level 7 Badge", "id": 11361267, "name": "Level 7"}, {"url": "/static/badges/api/a008_on.png", "description": "API Level 8 Badge", "id": 11363220, "name": "Level 8"}], "name": "API"}, {"description": "Java Server Pages Game Path", "id": 8675564, "badges": [{"url": "/static/badges/html/h001_on.png", "description": "HTML and JSP Level 1", "id": 12634409, "name": "Level 1"}, {"url": "/static/badges/html/h003_on.png", "description": "HTML and JSP Level 3", "id": 12639476, "name": "Level 3"}, {"url": "/static/badges/html/h002_on.png", "description": "HTML and JSP Level 2", "id": 12643473, "name": "Level 2"}], "name": "HTML + JSP"}, {"description": "Java game path", "id": 2243213, "badges": [{"url": "/static/badges/java/j001_on.png", "description": "Java Level 1 Badge", "id": 2595052, "name": "Level 1"}, {"url": "/static/badges/java/j002_on.png", "description": "Java Level 2 Badge", "id": 2552050, "name": "Level 2"}, {"url": "/static/badges/java/j003_on.png", "description": "Java Level 3 Badge", "id": 2577055, "name": "Level 3"}, {"url": "/static/badges/java/j004_on.png", "description": "Java Level 4 Badge", "id": 2631011, "name": "Level 4"}, {"url": "/static/badges/java/j005_on.png", "description": "Java Level 5 Badge", "id": 2574074, "name": "Level 5"}, {"url": "/static/badges/java/j006_on.png", "description": "Java Level 6 Badge", "id": 2578065, "name": "Level 6"}, {"url": "/static/badges/java/j007_on.png", "description": "Java Level 7 Badge", "id": 2573073, "name": "Level 7"}, {"url": "/static/badges/java/j008_on.png", "description": "Java Level 8 Badge", "id": 2590065, "name": "Level 8"}, {"url": "/static/badges/java/j009_on.png", "description": "Java Level 9 Badge", "id": 2550060, "name": "Level 9"}, {"url": "/static/badges/java/j010_on.png", "description": "Java Level 10 Badge", "id": 2589070, "name": "Level 10"}, {"url": "/static/badges/java/j011_on.png", "description": "Java Level 11 Badge", "id": 2604065, "name": "Level 11"}], "name": "Java"}, {"description": "Javascript Game Path", "id": 2473247, "badges": [{"url": "/static/badges/javascript/js001_on.png", "description": "Javascript Level 1 Badge", "id": 3313007, "name": "Level 1"}, {"url": "/static/badges/javascript/js002_on.png", "description": "Javascript Level 2 Badge", "id": 3202072, "name": "Level 2"}, {"url": "/static/badges/javascript/js003_on.png", "description": "Javascript Level 3 Badge", "id": 3235086, "name": "Level 3"}, {"url": "/static/badges/javascript/js004_on.png", "description": "Javascript Level 4 Badge", "id": 3282091, "name": "Level 4"}, {"url": "/static/badges/javascript/js005_on.png", "description": "Javascript Level 5 Badge", "id": 3206086, "name": "Level 5"}, {"url": "/static/badges/javascript/js006_on.png", "description": "Javascript Level 6 Badge", "id": 3277080, "name": "Level 6"}, {"url": "/static/badges/javascript/js007_on.png", "description": "Javascript Level 7 Badge", "id": 3259076, "name": "Level 7"}, {"url": "/static/badges/javascript/js008_on.png", "description": "Javascript Level 8 Badge", "id": 3217062, "name": "Level 8"}, {"url": "/static/badges/javascript/js009_on.png", "description": "Javascript Level 9 Badge", "id": 3292016, "name": "Level 9"}, {"url": "/static/badges/javascript/js010_on.png", "description": "Javascript Level 10 Badge", "id": 3295005, "name": "Level 10"}, {"url": "/static/badges/javascript/js011_on.png", "description": "Javascript Level 11 Badge", "id": 3212074, "name": "Level 11"}], "name": "Javascript"}, {"description": "Python game path", "id": 10030, "badges": [{"url": "/static/badges/python/p001_on.png", "description": "Python Level 1 Badge", "id": 87572, "name": "Level 1"}, {"url": "/static/badges/python/p002_on.png", "description": "Python Level 2 Badge", "id": 88541, "name": "Level 2"}, {"url": "/static/badges/python/p003_on.png", "description": "Python Level 3 Badge", "id": 87573, "name": "Level 3"}, {"url": "/static/badges/python/p004_on.png", "description": "Python Level 4 Badge", "id": 88542, "name": "Level 4"}, {"url": "/static/badges/python/p005_on.png", "description": "Python Level 5 Badge", "id": 92683, "name": "Level 5"}, {"url": "/static/badges/python/p006_on.png", "description": "Python Level 6 Badge", "id": 549028, "name": "Level 6"}, {"url": "/static/badges/python/p007_on.png", "description": "Python Level 7 Badge", "id": 515027, "name": "Level 7"}, {"url": "/static/badges/python/p008_on.png", "description": "Python Level 8 Badge", "id": 508029, "name": "Level 8"}, {"url": "/static/badges/python/p009_on.png", "description": "Python Level 9 Badge", "id": 2264210, "name": "Level 9"}, {"url": "/static/badges/python/p010_on.png", "description": "Python Level 10 Badge", "id": 8125949, "name": "Level 10"}], "name": "Python"}, {"description": "R Game Path", "id": 11835808, "badges": [{"url": "/static/badges/r/r001_on.png", "description": "R Level 1 Badge", "id": 11849268, "name": "Level 1"}, {"url": "/static/badges/r/r002_on.png", "description": "R Level 2 Badge", "id": 12207680, "name": "Level 2"}, {"url": "/static/badges/r/r003_on.png", "description": "R Level 3 Badge", "id": 12194168, "name": "Level 3"}, {"url": "/static/badges/r/r004_on.png", "description": "R Level 4 Badge", "id": 12204079, "name": "Level 4"}, {"url": "/static/badges/r/r005_on.png", "description": "R Level 5 Badge", "id": 12200084, "name": "Level 5"}, {"url": "/static/badges/r/r006_on.png", "description": "R Level 6 Badge", "id": 12197129, "name": "Level 6"}, {"url": "/static/badges/r/r007_on.png", "description": "R Level 7 Badge", "id": 12195118, "name": "Level 7"}], "name": "R"}, {"description": "Ruby Game Path", "id": 2462233, "badges": [{"url": "/static/badges/ruby/r001_on.png", "description": "Ruby Level 1", "id": 3251069, "name": "Level 1"}, {"url": "/static/badges/ruby/r002_on.png", "description": "Ruby Level 2", "id": 3222057, "name": "Level 2"}, {"url": "/static/badges/ruby/r003_on.png", "description": "Ruby Level 3 Badge", "id": 3467085, "name": "Level 3"}, {"url": "/static/badges/ruby/r004_on.png", "description": "Ruby Level 4 Badge", "id": 3536063, "name": "Level 4"}, {"url": "/static/badges/ruby/r005_on.png", "description": "Ruby Level 5 Badge", "id": 3454078, "name": "Level 5"}, {"url": "/static/badges/ruby/r006_on.png", "description": "Ruby Level 6 Badge", "id": 3428079, "name": "Level 6"}, {"url": "/static/badges/ruby/r007_on.png", "description": "Ruby Level 7 Badge", "id": 3490101, "name": "Level 7"}, {"url": "/static/badges/ruby/r008_on.png", "description": "Ruby Level 8 Badge", "id": 3532088, "name": "Level 8"}, {"url": "/static/badges/ruby/r009_on.png", "description": "Ruby Level 9 Badge", "id": 3449079, "name": "Level 9"}, {"url": "/static/badges/ruby/r010_on.png", "description": "Ruby Level 10 Badge", "id": 3519065, "name": "Level 10"}, {"url": "/static/badges/ruby/r011_on.png", "description": "Ruby Level 11 Badge", "id": 3523070, "name": "Level 11"}], "name": "Ruby"}], "type": "get_game_paths"});
      
      $httpBackend.whenGET('/jsonapi/stories').respond(stories); 
      $httpBackend.whenGET('test_data/python_game.json').passThrough();      
      $httpBackend.whenPOST('/jsonapi/log_access').respond({"message":"testing logging"});

      var player = { countryFlagURL: "/static/flags/sg_on.png",gender: "male",isoYear: 2010,countryCode: "SG",tags: ["SMU","hackerspacesg"],country: "Singapore",yearOfBirth: 1985,about: "I love Scifi",isoDay: 5,isoWeek: 6,isAdmin: true,gravatar: "http://www.gravatar.com/avatar/6e64bb2cab5367fd6e201df2aa722512/?default=&amp;s=80",location: "Singapore",rankings: [ ],player_id: 57754,professional: "1",nickname: "Ruijun",badges: [ ]}

      $httpBackend.whenGET('/jsonapi/player').respond(player); 

      var interfaces = {"interfaces": [{"singpathSupported": true, "description": "Python 2.5", "codeHighlightKey": "python", "editor": {"player_id": 57754, "nickname": "Chris", "email": "scboesch@gmail.com"}, "urls": ["http://python-gae-verifier.appspot.com/verify", "http://ideone-verifier.appspot.com/verify"], "exampleSolution": "spam=2\r\ndef addOne(x): \r\n  return x+1", "exampleTests": ">>> spam \r\n 2\r\n>>> addOne(2)\r\n 3\r\n>>> spam\r\n 3\r\n>>> addOne(2)\r\n 2\r\n", "id": 11020, "name": "Python"}, {"singpathSupported": false, "description": "Experimental Python Interface", "codeHighlightKey": "python", "editor": {"player_id": 57754, "nickname": "Chris", "email": "scboesch@gmail.com"}, "urls": ["http://pivotalapp.appspot.com/verify"], "exampleSolution": "b=2", "exampleTests": ">>> b \r\n 2", "id": 2254148, "name": "Development Python"}, {"singpathSupported": true, "description": "Java Interface", "codeHighlightKey": "Java", "editor": {"player_id": 57754, "nickname": "Chris", "email": "scboesch@gmail.com"}, "urls": ["http://parserplayground-staging.appspot.com/java", "http://parserplayground.appspot.com/java", "http://java-gae-verifier.appspot.com/java"], "exampleSolution": "int add(int x)\r\n{\r\n    return x+1;\r\n}\r\nString foo = \"foo\"; \r\nint b=1;\r\nchar[] charArray ={ 'a', 'b'};", "exampleTests": "assertEquals(add(0), 1); \r\nassertEquals(add(b), 2);\r\nassertTrue(true);\r\nassertFalse(false);\r\nassertEquals(foo, \"foo\");\r\nchar[] newArray ={ 'a', 'b'};\r\nassertArrayEquals(charArray, newArray);\r\nassertTrue(false);\r\nassertFalse(true);\r\nassertEquals(3.4, 3.4, 0.001); //Need a delta for floats.\r\n\r\n", "id": 2276166, "name": "Java"}, {"singpathSupported": false, "description": "Experimental Closure", "codeHighlightKey": "python", "editor": {"player_id": 57733, "nickname": "Mark Zuckerberg", "email": "pivotalexpert@gmail.com"}, "urls": ["http://pivotalapp.appspot.com/verify"], "exampleSolution": "b=2", "exampleTests": ">>> b \r\n 2", "id": 2292151, "name": "Closure"}, {"singpathSupported": true, "description": "Javascript Verifier", "codeHighlightKey": "Java", "editor": {"player_id": 57754, "nickname": "Chris", "email": "scboesch@gmail.com"}, "urls": ["http://javascriptverifier.appspot.com/javascript?id=1", "http://javascriptverifier.appspot.com/javascript?id=2"], "exampleSolution": "bar = \"Foo\";\r\nb=2;", "exampleTests": "assert_equal('This is a test', 'This is not a test');\r\nassert_equal(\"Foo\", bar);\r\nassert_equal(2,3);\r\nassert_equal(3,3);\r\nassert_equal(2,b);\r\nassert_equal(3.0001, 3.0002);", "id": 2293311, "name": "Javascript"}, {"singpathSupported": true, "description": "Ruby Verifier", "codeHighlightKey": "ruby", "editor": {"player_id": 57754, "nickname": "Chris", "email": "scboesch@gmail.com"}, "urls": ["http://rubyverifier.appspot.com/ruby?id=1", "http://rubyverifier.appspot.com/ruby?id=2"], "exampleSolution": "bar = \"foo\"\r\nisCool = true\r\ndef say_hello(name)\r\n  var = \"Hello, \" + name\r\n  return var\r\nend\r\n\r\naddResult = 2+3\r\n\r\nclass Person\r\n  attr_accessor :fname, :lname\r\nend", "exampleTests": "assert_equal(5,3)\r\nassert_equal(\"foo\", bar)\r\nassert_equal(true, isCool)\r\nassert_equal(\"Hello, John\",say_hello(\"John\"))\r\nassert_equal(5, addResult)", "id": 2447229, "name": "Ruby"}, {"singpathSupported": false, "description": "This is a Javascript based on Java GAE", "codeHighlightKey": "javascript", "editor": {"player_id": 1456051, "nickname": "wgx731", "email": "wgx731@gmail.com"}, "urls": ["http://wgx731lotrepls.appspot.com/javascript"], "exampleSolution": "bar = \"Foo\";\r\nb=2;", "exampleTests": "assert_equal('This is a test', 'This is not a test');\r\nassert_equal(\"Foo\", bar);\r\nassert_equal(2,3);\r\nassert_equal(3,3);\r\nassert_equal(2,b);\r\nassert_equal(3.0001, 3.0002);", "id": 6023053, "name": "Experimental Javascript"}, {"singpathSupported": false, "description": "This is a Ruby interface based on Java GAE", "codeHighlightKey": "ruby", "editor": {"player_id": 1456051, "nickname": "wgx731", "email": "wgx731@gmail.com"}, "urls": ["http://wgx731lotrepls.appspot.com/ruby"], "exampleSolution": "bar = \"foo\"\r\nisCool = true\r\ndef say_hello(name)\r\n  var = \"Hello, \" + name\r\nend\r\naddResult = 8\r\n", "exampleTests": "assert_equal(5,3)\r\nassert_equal(\"foo\", bar)\r\nassert_equal(true, isCool)\r\nassert_equal(\"Hello, John\",say_hello(\"John\"))\r\nassert_equal(5, addResult)", "id": 6032049, "name": "Experimental Ruby"}, {"singpathSupported": true, "description": "Python with db support", "codeHighlightKey": "python", "editor": {"player_id": 57754, "nickname": "Chris", "email": "scboesch@gmail.com"}, "urls": ["http://python-gae-verifier.appspot.com/verify"], "exampleSolution": "b=2\r\nclass Story(db.Model):\r\n    title = db.StringProperty()\r\n    body = db.TextProperty()\r\n    created = db.DateTimeProperty(auto_now_add=True)\r\n\r\nStory(title='Peter Pan').put()", "exampleTests": ">>> b \r\n 2\r\n>>> Story.all().count()\r\n 1\r\n>>> Story.all().filter('title = ', 'Peter Pan').count()\r\n  1\r\n>>> Story.all().filter('title = ', 'Barbie').count()\r\n  1", "id": 6326415, "name": "App Engine"}, {"singpathSupported": true, "description": "Objective-C Interface", "codeHighlightKey": "C", "editor": {"player_id": 57754, "nickname": "Chris", "email": "scboesch@gmail.com"}, "urls": ["http://184.73.56.51/cgi-bin/webserver.py"], "exampleSolution": "int b=2;\r\nfloat f = 123.45;\r\ndouble inches = 69.0/12;\r\nNSString *string1 = @\"This string is immutable\";\r\n\r\n//test function\r\nint addOne(int x) {\r\n  return x + 1;\r\n}\r\n\r\n//test macro\r\n#define mul(a,b) ((a)*(b))\r\n\r\n//test class\r\n@interface Rectangle: NSObject {\r\n    int width;\r\n    int height;\r\n}\r\n-(int) area;\r\n-(void) setWidth: (int) w;\r\n-(void) setHeight: (int) h;\r\n-(int) width;\r\n-(int) height;\r\n@end\r\n\r\n@implementation Rectangle\r\n-(int) area {\r\n    return width * height;\r\n}\r\n-(void) setWidth: (int) w {\r\n    width = w;\r\n}\r\n-(void) setHeight: (int) h {\r\n    height = h;\r\n}\r\n-(int) width {\r\n    return width;\r\n}\r\n-(int) height {\r\n    return height;\r\n}\r\n@end\r\n", "exampleTests": "AssertEquals(2, b);\r\nint expected_b = 2;\r\nAssertEquals(expected_b, b);\r\nAssertEquals((float)123.45, f);\r\nAssertEquals(69.0/12.0, inches);\r\nAssertEquals([NSString stringWithString:@\"This string is immutable\"], string1);\r\n\r\nAssertEquals(4, addOne(3));\r\nAssertEquals(42, mul(6, 7));\r\n\r\nRectangle *r = [[Rectangle alloc] init];\r\n[r setWidth: 11];\r\n[r setHeight: 18];\r\nAssertEquals(198, [r area]);\r\n", "id": 6569721, "name": "Objective-C"}, {"singpathSupported": true, "description": "PHP verifier test", "codeHighlightKey": "PHP", "editor": {"player_id": 1456051, "nickname": "wgx731", "email": "wgx731@gmail.com"}, "urls": ["http://wgx731lotrepls.appspot.com/script.php"], "exampleSolution": "$b = 2;\r\n$s = \"Hello World\";\r\n$s = str_replace('o','1',$s);\r\nfunction addOne($m){\r\n   return $m + 1;\r\n}", "exampleTests": "assert_equal(1,true);\r\nassert_equal($b,'d');\r\nassert_equal($b,2);\r\nassert_equal($s,'Hello World');\r\nassert_equal($s,'Hell1 W1rld');\r\nassert_equal(addOne($b),3);\r\n", "id": 6842348, "name": "PHP"}, {"singpathSupported": true, "description": "JSP Verifier", "codeHighlightKey": "java", "editor": {"player_id": 930010, "nickname": "masotime", "email": "masotime@gmail.com"}, "urls": ["http://jsp-verifier.dyndns.org/cgi-bin/verifier.py"], "exampleSolution": "<%@ page import=\"java.util.*, java.text.*\" %>\r\n<HTML>\r\n<HEAD>\r\n<TITLE>Hello Pineapples</TITLE>\r\n</HEAD>\r\n<BODY>\r\n\t<H1>Hello World</H1>\r\n\t<TABLE>\r\n\t\t<TR>\r\n\t\t\t<TD>\r\n\t\t\t\t<P>\r\n\t\t\t\t\tThis is an <B>embedded</B> table\r\n\t\t\t\t</P>\r\n\t\t\t</TD>\r\n\t\t</TR>\r\n\t\t<TR>\r\n\t\t\t<TD>\r\n\t\t\t\tThe request parameter 'fruit' has a value of <%= request.getParameter(\"fruit\") %>\r\n\t\t\t</TD>\r\n\t\t</TR>\r\n\t</TABLE>\r\n\tToday is: <%= new SimpleDateFormat(\"dd/MM/yyyy\").format(new Date()) %>\r\n</BODY>\r\n</HTML>", "exampleTests": "page().shouldHaveTitle(\"Hello Pineapples\"); \r\nonRequest(\"fruit\", \"guava\").page().shouldContain(\"The request parameter 'fruit' has a value of guava\");\r\npage().shouldContainElement(\"//TABLE/TR/TD/P/B\");\r\n", "id": 8680122, "name": "Java Server Pages"}], "type": "interfaces"}
      $httpBackend.whenGET('/jsonapi/interfaces').respond(interfaces);
      
      var python_5_problem_game = {"game_end": "None", "player": "Chris", "solvedProblemIDs": [], "currentProblem_id": "TBD", "playerID": 57754, "allSolved": false, "game_created": "2013-01-07 07:57:18.320949", "numProblems": 5, "numSolvedProblems": 0, "status": "ACCEPTING SOLUTIONS", "problemIDs": [18287, 11024, 18364, 8377, 11025], "problems": {"problems": [{"skeleton": "#def square(num):\r\n#    return num*num", "description": "As you create functions for SingPath, remember that they all will need to be fruitful functions.  This will allow SingPath to actually test your functions.  \r\n\r\nCreate the function square() that takes an integer or float as a parameter and returns the square of the parameter.\r\n\r\nI've given the complete function for this problem, you just need to remove the comment markings.", "path_id": 10030, "problemset_id": 11023, "examples": "This is the first problem where you will see multiple tests with multiple values.  You need to make sure your function works for all of these tests.\r\n\r\n>>> square(3) \r\n 9\r\n>>> square(8.5)\r\n 72.25\r\n>>> square(1.001)\r\n 1.002001", "interface": {"codeHighlightKey": "python", "name": "Python", "description": "Python 2.5"}, "problemsetorder": 10, "editor": {"player_id": 58546, "nickname": "Danny", "email": "PRIVATE"}, "id": 18287, "name": "Functions"}, {"skeleton": "def increment(num):\r\n    return ", "description": "Create a function named increment() that takes a number as a parameter and returns the number increased by one.  All you need to do is type in the expression after the word 'return'.", "path_id": 10030, "problemset_id": 11023, "examples": ">>> increment(2)\r\n 3\r\n>>> increment(2.35)\r\n 3.35\r\n>>> increment(2912)\r\n 2913", "interface": {"codeHighlightKey": "python", "name": "Python", "description": "Python 2.5"}, "problemsetorder": 20, "editor": {"player_id": 58546, "nickname": "Danny", "email": "PRIVATE"}, "id": 11024, "name": "Increment"}, {"skeleton": "def double_word(\r\n", "description": "Create a function called double_word() that takes a string as a parameter and returns the string duplicated.", "path_id": 10030, "problemset_id": 11023, "examples": ">>> double_word('fun')\r\n'funfun'\r\n>>> double_word('Mississippi')\r\n'MississippiMississippi'", "interface": {"codeHighlightKey": "python", "name": "Python", "description": "Python 2.5"}, "problemsetorder": 50, "editor": {"player_id": 58546, "nickname": "Danny", "email": "PRIVATE"}, "id": 18364, "name": "Double String"}, {"skeleton": "def repeat_word(\r\n", "description": "You need to generalize the function double_word() so that it takes two parameters, a string and a number.  It should return the string repeated the given number of times.\r\n", "path_id": 10030, "problemset_id": 11023, "examples": ">>> repeat_word('a',4)\r\n'aaaa'\r\n>>> repeat_word('blob',5)\r\n'blobblobblobblobblob'", "interface": {"codeHighlightKey": "python", "name": "Python", "description": "Python 2.5"}, "problemsetorder": 60, "editor": {"player_id": 58546, "nickname": "Danny", "email": "PRIVATE"}, "id": 18377, "name": "Repeat String"}, {"skeleton": "import math\r\ndef circle_area(r):\r\n    return math.pi", "description": "Python comes with many modules or libraries of functions and values.  You can access the functions and values in these modules by importing the module.  One of the modules you will often need is the math module.  It has many functions and values.  For this problem you will use the module to calculate the area of a circle given the radius.  You will notice that you can get the value of pi using the syntax math.pi.  Finish the formula.", "path_id": 10030, "problemset_id": 11023, "examples": ">>> circle_area(10) \r\n 314.15926535897933\r\n>>> circle_area(5)\r\n 78.539816339744831\r\n>>> circle_area(23.42)\r\n 1723.1522607604491", "interface": {"codeHighlightKey": "python", "name": "Python", "description": "Python 2.5"}, "problemsetorder": 70, "editor": {"player_id": 58546, "nickname": "Danny", "email": "PRIVATE"}, "id": 11025, "name": "Math Module"}], "type": "problems"}, "nextProblemID": "TBD", "gameID": "13791638", "tournamentID": null, "name": "jsonapi created game", "roundID": null, "heatID": null, "game_start": "2013-01-07 07:57:18.320977", "currentTime": "2013-01-07 07:57:42.582673", "game_type": "Timed Interview", "timelimit": 3600}

      $httpBackend.whenGET('/jsonapi/create_game').respond(python_5_problem_game); 
      $httpBackend.whenGET('/jsonapi/create_quest_game').respond(python_5_problem_game); 
      
      var bad_check_soluion_for_game_result = {"last_solved": false, "results": [{"status": false, "expected": 713, "call": "oops", "received": "317"}], "printed": "", "other_tests_result": null, "game_id": "14101372", "next_problem_id": 10033, "problem_id": "10033"};
      $httpBackend.whenPOST('/jsonapi/verify_solution.php').respond(bad_check_soluion_for_game_result); 
      
      var bad_verify_result = {"solved": false, "printed": "", "verification_message": "Your solution does not pass all the provided tests.", "results": [{"status": false, "expected": 2, "call": "spies", "received": "3"}]};
      var good_verify_result = {"solved": true, "verification_message": "Your solution passes all tests.", "printed": ""};
      $httpBackend.whenGET('/jsonapi/check_code_with_interface').respond(bad_verify_result); 
            
      //Pass through any request for partials
      $httpBackend.whenGET(/^partials/).passThrough();
      
      //Add story
      $httpBackend.whenPOST('/jsonapi/add_story').respond(function(method, url, data) {
        var newStory = JSON.parse(data);
        count = count + 1;
        newStory['id'] = count;
        stories.push(newStory);      
        return [200,newStory];
    
      });
      
      //Generic Response to catch anything sent to the SingPath rest API
      //Should intercept anything to /jsonapi/rest/. Using a regular expression to match url
      $httpBackend.whenGET(/^\/jsonapi\/rest\//).respond(function(method, url, data) {
        //alert('method '+method+' url '+url + ' data '+data);      
        return [200,{"message":"Still under development"}];
      });

});
